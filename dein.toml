[[plugins]]
repo = 'Shougo/dein.vim'

# [[plugins]] # カーソル位置のコンテキストに合わせてftを切り替える
# repo = 'osyo-manga/vim-precious'
# depends = ['context_filetype.vim']

# [[plugins]] # カーソル位置のコンテキストのftを判定するライブラリ
# repo = 'Shougo/context_filetype.vim'

[[plugins]] # toml syntax
repo = 'cespare/vim-toml'
on_ft = 'toml'

[[plugins]]
repo = 'airblade/vim-gitgutter'

[[plugins]]
repo = 'tpope/vim-fugitive'

[[plugins]]
repo = 'mattn/emmet-vim'

[[plugins]]
repo = 'tpope/vim-endwise'

[[plugins]]
repo = 'Shougo/neosnippet'
hook_source = '''
  imap <C-k> <Plug>(neosnippet_expand_or_jump)
  smap <C-k> <Plug>(neosnippet_expand_or_jump)
  xmap <C-k> <Plug>(neosnippet_expand_target)
  if has('conceal')
    set conceallevel=2 concealcursor=niv
  endif
'''
on_i  = 1
on_ft = ['snippet']

[[plugins]]
repo = 'Shougo/neosnippet-snippets'

[[plugins]]
repo = 'itchyny/lightline.vim'

[[plugins]]
repo = 'pangloss/vim-javascript'

[[plugins]]
repo = 'mxw/vim-jsx'

[[plugins]]
repo = 'posva/vim-vue'

[[plugins]]
repo = 'tpope/vim-surround'

[[plugins]] # コード補完
repo = 'Shougo/deoplete.nvim'
# プラグインが dein.vim によって追加されたとき実行
hook_add = 'let g:deoplete#enable_at_startup = 1'

[[plugins]] # コード補完（Golang用）
repo = 'zchee/deoplete-go'
on_ft = 'go'
depends = ['deoplete.nvim']

# [[plugins]]
# repo = 'tbodt/deoplete-tabnine'
# build = './install.sh'

[[plugins]]
repo = 'fatih/vim-go'
build = 'make'
hook_add = '''
  let g:go_def_mapping_enabled = 0
  let g:go_doc_keywordprg_enabled = 0
  let g:go_fmt_command = "goimports"
'''
on_ft = ['go']

[[plugins]]
repo = 'leafgarland/typescript-vim'
on_ft = ['typescript']

[[plugins]]
repo = 'dense-analysis/ale'
on_cmd = ['ALELint', 'ALEToggle', 'ALEEnable', 'ALEToggleBuffer', 'ALEEnableBuffer']
hook_source = '''
let g:ale_linters_explicit = 1 " 必要なlinterのみ有効化したいため
let g:ale_linters = {
  \   'typescript': ['tsserver']
  \   }
'''
depends = 'asyncomplete.vim'
on_ft = ['typescript', 'vue']

[[plugins]]
repo = 'prabirshrestha/asyncomplete.vim'
on_func = 'asyncomplete#enable_for_buffer'
hook_source = '''
let g:asyncomplete_enable_for_all = 0 " TypeScriptファイルの編集時のみ使用したいため
set completeopt+=preview

autocmd User asyncomplete_setup call asyncomplete#register_source(asyncomplete#sources#ale#get_source_options({
\ 'priority': 10
\ }))
'''
on_ft = ['typescript', 'vue']
