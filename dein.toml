[[plugins]]
repo = 'Shougo/dein.vim'

# [[plugins]] # カーソル位置のコンテキストに合わせてftを切り替える
# repo = 'osyo-manga/vim-precious'
# depends = ['context_filetype.vim']

# [[plugins]] # カーソル位置のコンテキストのftを判定するライブラリ
# repo = 'Shougo/context_filetype.vim'
[[plugins]]
repo = 'Shougo/deoplete.nvim'
hook_add = '''
  if !has('nvim')
    call dein#add('roxma/nvim-yarp')
    call dein#add('roxma/vim-hug-neovim-rpc')
  endif
  source ~/.config/nvim/deoplete.vim
'''


[[plugins]] # toml syntax
repo = 'cespare/vim-toml'
on_ft = 'toml'

[[plugins]]
repo = 'airblade/vim-gitgutter'

[[plugins]]
repo = 'tpope/vim-fugitive'

[[plugins]]
repo = 'mattn/emmet-vim'

# [[plugins]]
# repo = 'autozimu/LanguageClient-neovim'
# rev = 'next'
# build = 'bash install.sh'

# [[plugins]]
# repo = 'neoclide/coc.nvim'
# build = 'yarn install --frozen-lockfile'
# if = '''executable('node') && executable('yarn')'''
# build = './install.sh nightly'
# hook_add = 'source ~/.config/nvim/coc-settings.vim'

[[plugins]]
repo = 'tpope/vim-rails'

[[plugins]]
repo = 'tpope/vim-endwise'

[[plugins]]
repo = 'Shougo/denite.nvim'

# [[plugins]]
# repo = 'rodjek/vim-puppet'

[[plugins]]
repo = 'Shougo/neosnippet'
hook_source = '''
  imap <C-k> <Plug>(neosnippet_expand_or_jump)
  smap <C-k> <Plug>(neosnippet_expand_or_jump)
  xmap <C-k> <Plug>(neosnippet_expand_target)
  if has('conceal')
    set conceallevel=2 concealcursor=niv
  endif
'''
on_i  = 1
on_ft = ['snippet']

[[plugins]]
repo = 'Shougo/neosnippet-snippets'

[[plugins]]
repo = 'junegunn/fzf'

[[plugins]]
repo = 'itchyny/lightline.vim'

# [[plugins]]
# repo = 'Shougo/deoplete-rct'

[[plugins]]
repo = 'pangloss/vim-javascript'

[[plugins]]
repo = 'mxw/vim-jsx'

[[plugins]]
repo = 'posva/vim-vue'

#
# [[plugins]]
# repo = 'maxmellon/vim-jsx-pretty'
#
# [[plugins]]
# repo = 'alampros/vim-styled-jsx'

# [[plugins]]
# repo = 'ryym/vim-riot'

[[plugins]]
repo = 'tpope/vim-surround'

# [[plugins]]
# repo = 'moll/vim-node'

[[plugins]]
repo = 'zchee/deoplete-go'
build = 'make'
on_ft = 'go'
depends = ['deoplete.nvim']
hook_source = '''
  let g:deoplete#sources#go#gocode_binary = $GOPATH . '/bin/gocode'
'''

[[plugins]]
repo = 'tbodt/deoplete-tabnine'
build = './install.sh'

[[plugins]]
repo = 'fatih/vim-go'
build = 'make'
hook_add = '''
  let g:go_def_mapping_enabled = 0
  let g:go_doc_keywordprg_enabled = 0
  let g:go_fmt_command = "goimports"
'''
on_ft = ['go']

[[plugins]]
repo = 'leafgarland/typescript-vim'
on_ft = ['typescript']
